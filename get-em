#!/bin/sh
#------------------------------------------------------------------------------
# License
#
#     This file is part of the branch "get-em" available here:
#         https://github.com/wyldckat/ThirdParty-2.0.x/commits/get-em
#
#     These modifications are not endorsed by OpenCFD Ltd.
#
#     It's licensed under the same license of the target software, namely GPL
#   v3 or above (see <http://www.gnu.org/licenses/>).
#
#     The target software is OpenFOAM(R) <http://www.openfoam.com>. It's
#   trademarked by and Copyright (C) 2004-2011 OpenCFD Ltd.
#
# File
#     get-em
#
# Description
#     It's designed to assist the user on the download and unpacking of the
#   various ThirdParty packages that may or may not be necessary for the proper
#   operation of OpenFOAM.
#     The option nomenclature is based on popular package managers, although
#   this script is an over-simplified version of any package manager.
#
#------------------------------------------------------------------------------
# run from third-party directory only
cd ${0%/*} || exit 1
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}
[ -n "$FOAM_EXT_LIBBIN" ] || {
    echo "Error: FOAM_EXT_LIBBIN not set"
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}
. etc/tools/ThirdPartyFunctions

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

Usage
    Must be executed from the ThirdParty folder and OpenFOAM's environment
  must be active. Usage:
     ./${0##*/} li(st)
     ./${0##*/} ve(rsions) APPLICATION
     ./${0##*/} ca(che) [APPLICATION]
     ./${0##*/} so(urce) APPLICATION1-VERSION [APPLICATION2-VERSION] [...]
     ./${0##*/} do(wnload) APPLICATION1-VERSION [APPLICATION2-VERSION] [...]
     ./${0##*/} un(pack) APPLICATION1-VERSION [APPLICATION2-VERSION] [...]

Valid options (use only one per command)
  list     : shows a list of the retrievable software applications.
  versions : shows the list of available versions for the selected application.
  cache    : shows the list of already downloaded packages.
  install  : download (if necessary) and unpack the desired applications and respective versions.
  download : download (if necessary) the desired applications and respective versions.
  unpack   : unpack (if available) the desired applications and respective versions.

Special application markers and versions
  build-default : download and unpack the default applications necessary for the currently selected WM_ARCH+WM_COMPILER build rule.
  APP-default   : APP is the name of the desired application, therefore downloading the pre-defined default version.
  APP-latest    : APP is the name of the desired application, therefore downloading the latest version available.

USAGE
    exit 1
}

#if no options, show how to use
test "$#" -eq 0 && usage

#secure local variables
listOpt=0
versionsOpt=0
cacheOpt=0
downloadOpt=0
unpackOpt=0

# parse primary option
case "$1" in
h | he | help | -h | -help)
    usage
    ;;
li | list)
    listOpt=1
    ;;
versions)
    versionsOpt=1
    ;;
cache)
    cacheOpt=1
    ;;
install)
    downloadOpt=1
    unpackOpt=1
    ;;
download)
    downloadOpt=1
    ;;
unpack)
    unpackOpt=1
    ;;
*)
    usage "unknown option/argument: '$1'"
    ;;
esac

#go one option left, since it will no longer be necessary
shift
