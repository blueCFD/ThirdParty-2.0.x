#!/bin/sh
#------------------------------------------------------------------------------
# License
#
#     This file is part of the branch "get-em" available here:
#         https://github.com/wyldckat/ThirdParty-2.0.x/commits/get-em
#
#     These modifications are not endorsed by OpenCFD Ltd.
#
#     It's licensed under the same license of the target software, namely GPL
#   v3 or above (see <http://www.gnu.org/licenses/>).
#
#     The target software is OpenFOAM(R) <http://www.openfoam.com>, which is
#   trademarked by and Copyright (C) OpenCFD Ltd.
#
# File
#     etc/tools/get-em/gcc
#
# Description
#     This script will gather the necessary information about the application.
#     This script expects to be executed in the base folder where the get-em script is.
#
# FIXME
#   * Currently it is hard-coded to use tar.gz.
#
#------------------------------------------------------------------------------

#these two might come in handy
Script=${0##*/}
path2Script=${0%/*}
versionCacheFile=$path2Script/$Script.cache
testFile="$Script.dumpfile.$$"

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

Usage
    Must be executed from the ThirdParty folder and OpenFOAM's environment
  must be active. Usage:
     $Script description
     $Script versions MIRROR_URL
     $Script geturl MIRROR_URL VERSION
     $Script getversion MIRROR_URL VERSION
     $Script getfilename VERSION
     $Script cache VERSION

Valid options (use only one per command)
  description - show the description for this application.
  update MIRROR_URL - updates the list of versions available.
  versions MIRROR_URL - show the list of versions available for this application.
  geturl MIRROR_URL VERSION - get the link for the desired version to download.
  getversion MIRROR_URL VERSION - get the true version.
  getfilename VERSION - get the filename for the desired version (true version only).
  verifyfile VERSION - verify if the package's integrity for the desired version (true version only).
  cache VERSION - check if the version is already downloaded. Shows YES if available.

USAGE
    exit 1
}

[ "$#" -eq 0 ] && usage "Missing any options."

case $1 in
description)
  echo "gcc - Retrieve the whole gcc package (gcc, g++, ada, fortran, go, java, objc). Size: 60 to 100MB"
  break
  ;;
update)
  [ "$#" -le 1 ] && usage "Missing MIRROR_URL for version listing."
  wget "$2" -O $testFile > /dev/null 2>&1
  grep -e "gcc-[4]\.[3-9]\.[0-9]" $testFile | sed -e 's=.*>\(gcc-.*\)<.*=\1=' -e 's=/==' -e 's_-_=_' | grep -e "[0-9]\.[0-9]\.[0-9]$" | sort -u > $versionCacheFile
  rm $testFile
  break
  ;;
versions)
  [ "$#" -le 1 ] && usage "Missing MIRROR_URL for version listing."
  [ ! -r "$versionCacheFile" ] && $0 update $2 $3 #force an update
  [ ! -r "$versionCacheFile" ] && usage "Unable to update the list of versions"
  cat $versionCacheFile
  break
  ;;
versions)
  [ "$#" -le 1 ] && usage "Missing MIRROR_URL for version listing."
  wget "$2" -O $testFile > /dev/null 2>&1
  grep -e "gcc-[4]\.[3-9]\.[0-9]" $testFile | sed -e 's=.*>\(gcc-.*\)<.*=\1=' -e 's=/==' -e 's_-_=_' | grep -e "[0-9]\.[0-9]\.[0-9]$" | sort -u
  rm $testFile
  break
  ;;
geturl)
  [ "$#" -le 2 ] && usage "Missing MIRROR_URL and/or VERSION for url retrieval."
  VERSION=`$0 getversion $2 $3`
  echo ${2}gcc-$VERSION/gcc-$VERSION.tar.gz
  break
  ;;
getversion)
  [ "$#" -le 2 ] && usage "Missing MIRROR_URL and/or VERSION for true version retrieval."
  case $3 in
  default)
    VERSION=`. etc/defaults.sh ; echo \$gcc_version | sed 's/gcc-//'`
    break
    ;;
  latest)
    VERSION=`$0 versions $2 | tail -n 1 | sed -e 's/gcc=//'`
    break
    ;;
  *)
    VERSION=$3
    break
    ;;
  esac
  echo $VERSION
  break
  ;;
getfilename)
  [ "$#" -le 1 ] && usage "Missing VERSION for version listing."
  echo gcc-$2.tar.gz
  break
  ;;
verifyfile)
  [ "$#" -le 1 ] && usage "Missing VERSION for version listing."
  FILENAME=`$0 getfilename $2`
  [ -r download/$FILENAME.complete ] && rm download/$FILENAME.complete
  tar -tzf download/$FILENAME > /dev/null 2>&1 && touch download/$FILENAME.complete && echo "OK"
  break
  ;;
cache)
  [ "$#" -le 1 ] && usage "Missing VERSION for version listing."
  FILENAME=`$0 getfilename $2`
  [ -r download/$FILENAME.complete ] && echo "YES"
  break
  ;;
*)
  usage "Invalid option '$1'"
  ;;
esac
